import{_ as e,o as s,c as a,U as n}from"./chunks/framework.3eb667f5.js";const u=JSON.parse('{"title":"The Database","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/onboarding/database/index.md"}'),o={name:"docs/onboarding/database/index.md"},t=n(`<h1 id="the-database" tabindex="-1">The Database <a class="header-anchor" href="#the-database" aria-label="Permalink to &quot;The Database&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The presented examples in this documentation have been generated from the PREUAT environment, a lower environment with the same schema as the Production environment with a mass database. This database has similar information from Production with masked fields for security.</p></div><p>To understand this application, it&#39;s recommended to understand the logic behind the application. The Database structure is a good starting point to help you understand how all the information it&#39;s connected. Here&#39;s a guide to introduce you to the essential Databases and their schemas.</p><h2 id="the-schemas" tabindex="-1">The Schemas <a class="header-anchor" href="#the-schemas" aria-label="Permalink to &quot;The Schemas&quot;">​</a></h2><p>During the history of this application, the Database schema has changed many times, looking for improvements and best practices. The current state of the database is a result of those changes.</p><p>To simplify the onboarding process, we only show the most commonly used Databases. While working on the tool, you can find new information about the project structure. As we explained before, this project is enormous, and not all of the application has been covered by one person.</p><p>Created or Adapter to C360. Technical Deb.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Pre UAT</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Accounts           - Very Important - All related to Users and Permissions.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ AssetMgmt          - Primary Schema of C360 / Related to Service Request Form</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Billing            - [TODO]</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Collateral360      - New and Modern Tables are created here.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ DBReview           - For some Features</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Parcel             - Core tables from Parcel still used on C360</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Reports            - A lot of adaptations for C360 (Core Database)</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ Users              - Bids from the Vendors</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ los_oauth_db       - Important for the LOS_APIS, the API version of C360</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ performance_schema - Default database permissions</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ Queues             - Before the Laravel implementation ([Todd] Is this important?)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Let&#39;s now review those schemas in more detail:</p><ul><li><a href="/docs/onboarding/database/schemas/accounts.html">Accounts</a></li></ul><h2 id="important-relations" tabindex="-1">Important Relations <a class="header-anchor" href="#important-relations" aria-label="Permalink to &quot;Important Relations&quot;">​</a></h2><p>Relationship Symbology:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">-     - one TO one</span></span>
<span class="line"><span style="color:#A6ACCD;">-&lt;    - one TO many</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;-    - many TO one</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;-&lt;   - many TO many</span></span>
<span class="line"><span style="color:#A6ACCD;">-0    - one TO zero or one</span></span>
<span class="line"><span style="color:#A6ACCD;">0-    - zero or one TO one</span></span>
<span class="line"><span style="color:#A6ACCD;">0-0   - zero or one TO zero or one</span></span>
<span class="line"><span style="color:#A6ACCD;">-0&lt;   - one TO zero or many</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;0-   - zero or many TO one</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Here&#39;s a list of the essential relations:</p><ul><li><code>Accounts.Accounts</code> <code>&gt;-&lt;</code> <code>Accounts.Offices</code> - Every <strong>Account</strong> belongs to One or More <strong>Offices</strong>. (many TO many)</li><li><code>Accounts.Company</code> <code>-&lt;</code> <code>Accounts.Offices</code> - Every <strong>Company</strong> have to One or More <strong>Offices</strong>. (one TO many)</li><li><code>Accounts.Accounts</code> <code>-0</code> <code>Accounts.AccountDetails</code> - Every <strong>Account</strong> could have Zero or One <strong>AccountDetail</strong>. (one TO zero or one)</li><li><code>Accounts.Roles</code> <code>&gt;-&lt;</code> <code>Accounts.RolesPermissions</code> - Every <strong>Role</strong> belongs to One or More <strong>Permission</strong>. (one TO zero or one)</li></ul>`,15),l=[t];function r(c,i,p,d,h,m){return s(),a("div",null,l)}const C=e(o,[["render",r]]);export{u as __pageData,C as default};
